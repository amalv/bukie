import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { cookies } from "next/headers";
import Script from "next/script";
import { darkThemeClass, lightThemeClass } from "@/design/tokens.css";
import { ThemeToggle } from "../design/theme/ThemeToggle";
import * as headerStyles from "./header.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Server: read cookie preference ('light' | 'dark')
  const cookieStore = await cookies();
  const pref = cookieStore.get("theme")?.value as "light" | "dark" | undefined;
  const themeClass = pref === "dark" ? darkThemeClass : lightThemeClass;
  const initialThemeAttr = pref ?? "system";
  return (
    <html lang="en" data-theme={initialThemeAttr}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${themeClass}`}
      >
        <Script
          id="theme-init"
          strategy="beforeInteractive"
        >{`(()=>{try{var m=document.cookie.match(/(?:^|; )theme=([^;]+)/);var p=m?decodeURIComponent(m[1]):null;var d=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;var c=p||(d?'dark':'light');document.documentElement.setAttribute('data-theme',c);}catch(e){}})();`}</Script>
        <header className={headerStyles.header}>
          <div>Bukie</div>
          <ThemeToggle />
        </header>
        {children}
      </body>
    </html>
  );
}
